{"version":3,"file":"main.js","mappings":"sBAAAA,OAAOC,iBACN,QACA,SAmCA,I,QCrCDD,OAAOC,iBACN,QACA,SAgCA,KCjCGC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,Q,gCCrBR,IAAIG,EAAW,EAGf,MAAMC,EAAQ,CACpBC,KAAM,QACNC,QAAS,GACTC,UAAW,GACXC,QAAS,GACTC,QAAS,ICFH,SAASC,EAAWC,EAAQC,GAKlC,QADoBA,EAASC,MAAK,EAAGR,KAAAA,KAAWA,IAASM,ICRnD,MAAMG,EACZC,YAAYC,GACX,IAAKA,EACJ,OAAOC,QAAQC,MAAM,yBAGwB,GAA1CR,EAAWM,EAAaZ,EAAMI,WACjCW,KAAKC,GAAKjB,IACVgB,KAAKd,KAAOW,EACZZ,EAAMI,QAAQa,KAAKF,QAKtB,IAAIL,EAAQ,SAEZ,IAAIA,EAAQ,QCkBL,MAAMQ,EAKZP,YAAYQ,EAAYC,GAEvB,GAA6C,GAAzCd,EAAWa,EAAYnB,EAAMK,SAAmB,CAGnD,IAAIgB,EAASD,EACbpB,EAAMK,QAAQc,GAAcE,ICfxB,SAASC,EAAYf,EAAQC,GAGnC,IAAKA,EAEJ,OADAK,QAAQC,MAAM,gCACP,KAER,IAAKP,EAEJ,OADAM,QAAQC,MAAM,8BACP,KAMR,OAHeN,EAASC,MAAK,UAAU,GAAEO,IACxC,OAAOA,IAAOT,MAMR,KDER,IAAIW,EAAU,UAAU,CAACK,EAAOC,IAC3BA,GACHX,QAAQY,IAAIzB,EAAMG,UAAUoB,EAAMP,IAAIU,WAC9B1B,EAAMG,UAAUoB,EAAMP,IAAIU,UAAYF,GAGxC,uBAGR,IAAIN,EAAU,QAAQ,CAACS,EAAUH,KAChC,GAAIA,EAEH,OADAX,QAAQY,IAAI,GAAGE,WAAkBH,KAC1B,GAAGG,WAAkBH,OAI9B,IAAIN,EAAU,WAAW,CAACS,EAAUH,KACnC,GAAIG,EAGH,OAFiBd,QAAQY,IAAIG,KAAKC,UAAUF,OE9D9C,IARO,MACNhB,YAAYV,GACXc,KAAKC,GAAKjB,IACVgB,KAAKd,KAAOA,EACZD,EAAME,QAAQe,KAAKF,QAIV,YCDX1B,OAAOC,iBACN,QACA,KACC,GAAIwC,SAASC,cAAc,aAAc,CAIxC,IAAIC,EAAU,sBACd,MAAMC,EAAc,CAACD,EAAUA,KAC9BnB,QAAQY,IAAIO,IAQb,SAASE,EAAejC,EAAMG,GAQ7B,IAAI+B,EACsC,GAAtC7B,EAAWF,EAASJ,EAAMI,WAC7B+B,EF7BE,SAAiB5B,EAAQC,GAG/B,IAAKA,EAEJ,OADAK,QAAQC,MAAM,gCACP,KAER,IAAKP,EAEJ,OADAM,QAAQC,MAAM,8BACP,KAGR,MAAMsB,EAAS5B,EAASC,MAAK,UAAU,KAAER,IACxC,OAAOA,IAASM,KAEjB,OAAI6B,GAIG,KEUeC,CAAQ,GAAGjC,IAAWJ,EAAMI,UAE/C,IAAIkC,EAAerC,GAAc,OAC7B0B,EAAY3B,EAAMG,UAAUmC,GAAgB,CAC/CtB,GAAIjB,IACJE,KAAMqC,EACNlC,QAAS+B,EACTd,OAAQrB,EAAMK,QACdqB,UAAWL,EAAOkB,UAEnB1B,QAAQY,IACP,GAAGE,EAAS1B,mBAAmB2B,KAAKC,UACnC7B,EAAMG,UAAUmC,OA5BnBzB,QAAQY,IAAIG,KAAKC,UAAU7B,IAC3BiC,EAAYD,GA+BZ,IAAIX,EAASrB,EAAMK,QACnB,IAAI6B,EAAe,IAAK,SAExB,MAAMM,EAAIxC,EAAMG,UAAN,EACVqC,EAAEnB,OAAOoB,QAAQD,GACjBnB,EAAOqB,KACNF,EAAEvC,KACF,wDAAwD2B,KAAKC,UAC5DW,EAAEpC,YAIJ,IAAI8B,EACJ,MAAMS,EAAO3C,EAAMG,UAAN,KACbkB,EAAOqB,KAAKF,EAAEvC,KAAM,sBAAsB0C,EAAK1C,QAE/CoB,EAAOqB,KAAKF,EAAEvC,KAAM,GAAG0C,EAAK1C,oCAC5BoB,EAAOqB,KACNF,EAAEvC,KACF,0FAEDoB,EAAOqB,KACNF,EAAEvC,KACF,iIAEDoB,EAAOqB,KACNF,EAAEvC,KACF,kHAAkHuC,EAAEpC,QAAQH,gEAG7H,IAAI2C,EAAUC,OAAO,oBACrBL,EAAEvC,KAAOD,EAAMG,UAAN,OAA4ByC,EAErCvB,EAAOqB,KACNF,EAAEvC,KACF,4BAA4BuC,EAAEvC,gDAE/B2C,EAAUC,OAAO,kCACjB7C,EAAMC,KAAO2C,EAEbvB,EAAOqB,KACNF,EAAEvC,KACF,0CAA0CD,EAAMC,+DAEjDoB,EAAOoB,QAAQzC,EAAME,SACrBmB,EAAOqB,KACNF,EAAEvC,KACF,2DACCqB,EAAY,EAAGtB,EAAME,SAASD,QAGhCoB,EAAOqB,KACNF,EAAEvC,KACF,+BAA+BqB,EAAY,EAAGtB,EAAME,SAASD,QAG9D,IAAIiB,EAAU,UAAU,aAI1B,I","sources":["webpack:///./src/js/footer.js","webpack:///./src/js/header.js","webpack:///webpack/bootstrap","webpack:///./src/js/globals/globals.js","webpack:///./src/js/utils/checkWorld.js","webpack:///./src/js/species/species.js","webpack:///./src/js/actions/actions.js","webpack:///./src/js/utils/getItem.js","webpack:///./src/js/region/region.js","webpack:///./src/js/game.js"],"sourcesContent":["window.addEventListener(\r\n\t'load',\r\n\t() => {\r\n\t\t// let footers = document.querySelectorAll('.footer');\r\n\t\t// // let headerHeights = (headers) => {\r\n\t\t// // \tconsole.log(headers);\r\n\t\t// // \theaderHeight = headers.getBoundingClientRect();\r\n\t\t// // \treturn headerHeight.height;\r\n\t\t// // };\r\n\t\t// const classScrollToggle = (\r\n\t\t// \titem,\r\n\t\t// \tclassName,\r\n\t\t// \tscrollValue = window.scrollY\r\n\t\t// ) => {\r\n\t\t// \tif (scrollValue < scrollValue - item.offsetHeight) {\r\n\t\t// \t\tif (item.classList.contains(className)) {\r\n\t\t// \t\t\titem.classList.remove(className);\r\n\t\t// \t\t}\r\n\t\t// \t} else {\r\n\t\t// \t\titem.classList.add(className);\r\n\t\t// \t}\r\n\t\t// };\r\n\t\t// const iterateToScroll = (items, className) => {\r\n\t\t// \tfor (let i = 0; i < items.length; i++) {\r\n\t\t// \t\twindow.addEventListener('scroll', () => {\r\n\t\t// \t\t\tconsole.log(\r\n\t\t// \t\t\t\t`scroll is ${window.scrollY}`,\r\n\t\t// \t\t\t\tdocument.body.scrollHeight - items[i].offsetHeight\r\n\t\t// \t\t\t);\r\n\t\t// \t\t\tclassScrollToggle(items[i], className);\r\n\t\t// \t\t});\r\n\t\t// \t}\r\n\t\t// };\r\n\t\t// iterateToScroll(footers, 'footer--active');\r\n\t\t// // iterateToScroll(document.querySelectorAll('.footer'), 'footer--active');\r\n\t\t// // console.log(headerHeights);\r\n\t},\r\n\tfalse\r\n);\r\n","window.addEventListener(\r\n\t'load',\r\n\t() => {\r\n\t\t// let headers = document.querySelectorAll('.header');\r\n\t\t// // let headerHeights = (headers) => {\r\n\t\t// // \tconsole.log(headers);\r\n\t\t// // \theaderHeight = headers.getBoundingClientRect();\r\n\t\t// // \treturn headerHeight.height;\r\n\t\t// // };\r\n\t\t// const classScrollToggle = (\r\n\t\t// \titem,\r\n\t\t// \tclassName,\r\n\t\t// \tscrollValue = window.scrollY\r\n\t\t// ) => {\r\n\t\t// \tif (scrollValue > item.offsetHeight / 2) {\r\n\t\t// \t\titem.classList.add(className);\r\n\t\t// \t} else {\r\n\t\t// \t\tif (item.classList.contains(className)) {\r\n\t\t// \t\t\titem.classList.remove(className);\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// };\r\n\t\t// const iterateToScroll = (items, className) => {\r\n\t\t// \tfor (let i = 0; i < items.length; i++) {\r\n\t\t// \t\twindow.addEventListener('scroll', () => {\r\n\t\t// \t\t\t// console.log(`scroll is ${window.scrollY}`, items[i].offsetHeight);\r\n\t\t// \t\t\tclassScrollToggle(items[i], className);\r\n\t\t// \t\t});\r\n\t\t// \t}\r\n\t\t// };\r\n\t\t// iterateToScroll(headers, 'header--active');\r\n\t\t// // iterateToScroll(document.querySelectorAll('.footer'), 'footer--active');\r\n\t\t// // console.log(headerHeights);\r\n\t},\r\n\tfalse\r\n);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export let idNumber = 0,\r\n\tlastObserved = '';\r\n\r\nexport const world = {\r\n\tname: 'world',\r\n\tregions: [],\r\n\tcreatures: [],\r\n\tspecies: [],\r\n\tactions: [],\r\n};\r\n","import { world } from '../globals/globals';\r\n/**\r\n *  @param { string } needle\r\n *  @param { object } haystack\r\n *\r\n */\r\nexport function checkWorld(needle, haystack) {\r\n\t// In this example, we want to check that a species doesn't exist before doing the thing.\r\n\t//step 1: Check that the world exists.\r\n\t//step 2: run find in object\r\n\tconst checkResult = haystack.find(({ name }) => name === needle);\r\n\tif (checkResult) {\r\n\t\t// console.warn(`This already exists at ${haystack}`);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n/**\r\n * @function checkId\r\n *  @param { string } needle\r\n *  @param { Object } haystack\r\n *\r\n */\r\nexport function checkId(needle, haystack) {\r\n\tif (!haystack) {\r\n\t\tconsole.error('There is no haystack defined');\r\n\t\treturn null;\r\n\t}\r\n\tif (!needle) {\r\n\t\tconsole.error(`there is no needle defined`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t//step 2: run find in object\r\n\tconst checkResult = haystack.find(({ id }) => id === needle);\r\n\tif (checkResult) {\r\n\t\t// console.warn(`This already exists at ${haystack}`);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n","import { idNumber, world } from '../globals/globals';\r\nimport { checkWorld } from '../utils/checkWorld';\r\nexport class Species {\r\n\tconstructor(speciesName) {\r\n\t\tif (!speciesName) {\r\n\t\t\treturn console.error(`Name must be provided`);\r\n\t\t}\r\n\r\n\t\tif (checkWorld(speciesName, world.species) == false) {\r\n\t\t\tthis.id = idNumber++;\r\n\t\t\tthis.name = speciesName;\r\n\t\t\tworld.species.push(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nnew Species('Human');\r\n\r\nnew Species('Doof');\r\n","import { idNumber, world } from '../globals/globals';\r\nimport { checkWorld } from '../utils/checkWorld';\r\nconst action = {\r\n\tlisten: (event, data) => {\r\n\t\tif (data) {\r\n\t\t\tconsole.log(world.creatures[event.id].lastHeard);\r\n\t\t\treturn (world.creatures[event.id].lastHeard = data);\r\n\t\t\t// console.log(world.creatures[this.id]);\r\n\t\t}\r\n\t\treturn `Nothing was Heard.`;\r\n\t},\r\n\ttalk: (creature, data) => {\r\n\t\tif (data) {\r\n\t\t\tconsole.log(`${creature} said: ${data}`);\r\n\t\t\treturn `${creature} said: ${data}`;\r\n\t\t}\r\n\t},\r\n\tobserve: (data) => {\r\n\t\tif (creature) {\r\n\t\t\tlet returnData = `nothing was returned`;\r\n\t\t\tfor (item in data) {\r\n\t\t\t\treturnData += Json.stringify(item);\r\n\t\t\t}\r\n\t\t\t// returnData = console.log(JSON.stringify(creature));\r\n\t\t\tlastObserved = returnData;\r\n\t\t\treturn returnData;\r\n\t\t}\r\n\t\treturn;\r\n\t},\r\n};\r\n\r\n/*\r\n * @class AddAction\r\n * @param {string} actionName The name of the action\r\n */\r\n\r\nexport class addAction {\r\n\t/*\r\n\t * @param {string} actionName The name of the action\r\n\t * @param { function }\r\n\t */\r\n\tconstructor(actionName, functionCallback) {\r\n\t\t// check to see if this action exists\r\n\t\tif (checkWorld(actionName, world.actions) == false) {\r\n\t\t\t// this.id = idNumber++;\r\n\t\t\t// this.name = actionName;\r\n\t\t\tlet action = functionCallback;\r\n\t\t\tworld.actions[actionName] = action;\r\n\t\t\t// console.log(world.actions);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nnew addAction('listen', (event, data) => {\r\n\tif (data) {\r\n\t\tconsole.log(world.creatures[event.id].lastHeard);\r\n\t\treturn (world.creatures[event.id].lastHeard = data);\r\n\t\t// console.log(world.creatures[this.id]);\r\n\t}\r\n\treturn `Nothing was Heard.`;\r\n});\r\n\r\nnew addAction('talk', (creature, data) => {\r\n\tif (data) {\r\n\t\tconsole.log(`${creature} said: ${data}`);\r\n\t\treturn `${creature} said: ${data}`;\r\n\t}\r\n});\r\n\r\nnew addAction('observe', (creature, data) => {\r\n\tif (creature) {\r\n\t\tlet returnData = console.log(JSON.stringify(creature));\r\n\t\t// lastObserved = returnData;\r\n\t\treturn returnData;\r\n\t}\r\n\treturn;\r\n});\r\n","/**\r\n * @function retrieve an item from our game object by name.\r\n *  @param { string } needle    The thing to look for\r\n *  @param { object } haystack The object to look at\r\n */\r\n\r\nexport function getItem(needle, haystack) {\r\n\t// In this example, we want to check that a species doesn't exist before doing the thing.\r\n\t//step 1: Check that the world exists.\r\n\tif (!haystack) {\r\n\t\tconsole.error('There is no haystack defined');\r\n\t\treturn null;\r\n\t}\r\n\tif (!needle) {\r\n\t\tconsole.error(`there is no needle defined`);\r\n\t\treturn null;\r\n\t}\r\n\t//step 2: run find in object\r\n\tconst result = haystack.find(function ({ name }) {\r\n\t\treturn name === needle;\r\n\t});\r\n\tif (result) {\r\n\t\t// console.warn(`This already exists at ${haystack}`);\r\n\t\treturn result;\r\n\t}\r\n\treturn null;\r\n}\r\n/**\r\n * @function retrieve an item from our game object by id.\r\n *  @param { string } needle    The thing to look for\r\n *  @param { object } haystack The object to look at\r\n */\r\nexport function getItemById(needle, haystack) {\r\n\t// In this example, we want to check that a species doesn't exist before doing the thing.\r\n\t//step 1: Check that the world exists.\r\n\tif (!haystack) {\r\n\t\tconsole.error('There is no haystack defined');\r\n\t\treturn null;\r\n\t}\r\n\tif (!needle) {\r\n\t\tconsole.error(`there is no needle defined`);\r\n\t\treturn null;\r\n\t}\r\n\t//step 2: run find in object\r\n\tconst result = haystack.find(function ({ id }) {\r\n\t\treturn id === needle;\r\n\t});\r\n\tif (result) {\r\n\t\t// console.warn(`This already exists at ${haystack}`);\r\n\t\treturn result;\r\n\t}\r\n\treturn null;\r\n}\r\n","import { idNumber, world } from '../globals/globals';\r\nexport class Region {\r\n\tconstructor(name) {\r\n\t\tthis.id = idNumber++;\r\n\t\tthis.name = name;\r\n\t\tworld.regions.push(this);\r\n\t}\r\n}\r\n\r\nnew Region('Region 1');\r\n","'use strict';\r\n\r\nimport { idNumber, world, lastObserved } from './globals/globals';\r\nimport { Species } from './species/species';\r\nimport { addAction } from './actions/actions';\r\nimport { Region } from './region/region';\r\nimport { checkWorld } from './utils/checkWorld';\r\nimport { getItem, getItemById } from './utils/getItem';\r\nwindow.addEventListener(\r\n\t'load',\r\n\t() => {\r\n\t\tif (document.querySelector('.post-200')) {\r\n\t\t\t//This is the game world object, which controls and builds out everything.\r\n\t\t\t// const world = world;\r\n\r\n\t\t\tlet message = 'Welcome to the game';\r\n\t\t\tconst gameMessage = (message = message) => {\r\n\t\t\t\tconsole.log(message);\r\n\t\t\t};\r\n\t\t\tconsole.log(JSON.stringify(world));\r\n\t\t\tgameMessage(message);\r\n\t\t\t/*\r\n\t\t\t * @function creatureCreate Create a new creature in the game environment\r\n\t\t\t *\r\n\t\t\t */\r\n\t\t\tfunction creatureCreate(name, species) {\r\n\t\t\t\t// this.id = idNumber++;\r\n\t\t\t\t// this.name = name ? name : 'Doof';\r\n\t\t\t\t// this.species = world.species[species]\r\n\t\t\t\t// \t? world.species[species]\r\n\t\t\t\t// \t: new Species(species);\r\n\t\t\t\t// this.action = world.actions;\r\n\t\t\t\t// this.lastHeard = this.action.listen();\r\n\t\t\t\tlet speciesToBecome = undefined;\r\n\t\t\t\tif (checkWorld(species, world.species) == true) {\r\n\t\t\t\t\tspeciesToBecome = getItem(`${species}`, world.species, 'name');\r\n\t\t\t\t}\r\n\t\t\t\tlet creatureName = name ? name : 'Doof';\r\n\t\t\t\tlet creature = (world.creatures[creatureName] = {\r\n\t\t\t\t\tid: idNumber++,\r\n\t\t\t\t\tname: creatureName,\r\n\t\t\t\t\tspecies: speciesToBecome,\r\n\t\t\t\t\taction: world.actions,\r\n\t\t\t\t\tlastHeard: action.listen(),\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`${creature.name} created at ${JSON.stringify(\r\n\t\t\t\t\t\tworld.creatures[creatureName]\r\n\t\t\t\t\t)}`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlet action = world.actions;\r\n\t\t\tnew creatureCreate('I', 'Human');\r\n\t\t\t// new creatureCreate('I', 'Human');\r\n\t\t\tconst i = world.creatures['I'];\r\n\t\t\ti.action.observe(i);\r\n\t\t\taction.talk(\r\n\t\t\t\ti.name,\r\n\t\t\t\t`Hmmmm, It seems that I can now see what I am. I am a ${JSON.stringify(\r\n\t\t\t\t\ti.species\r\n\t\t\t\t)}`\r\n\t\t\t);\r\n\r\n\t\t\tnew creatureCreate();\r\n\t\t\tconst doof = world.creatures['Doof'];\r\n\t\t\taction.talk(i.name, `Here, is my friend ${doof.name}`);\r\n\r\n\t\t\taction.talk(i.name, `${doof.name} is the first of their kind.`);\r\n\t\t\taction.talk(\r\n\t\t\t\ti.name,\r\n\t\t\t\t`It may be strange, but it is not the first time that something like this has happened.`\r\n\t\t\t);\r\n\t\t\taction.talk(\r\n\t\t\t\ti.name,\r\n\t\t\t\t`This world is strange. Almost iterative. It is as though it's a world constantly refreshing and playing, over and over again.`\r\n\t\t\t);\r\n\t\t\taction.talk(\r\n\t\t\t\ti.name,\r\n\t\t\t\t`I can almost see it. As though, I was something simpler once upon a time, but now I think I am... Real. A real ${i.species.name}. I can almost see it. but I don't know what my name is.`\r\n\t\t\t);\r\n\r\n\t\t\tlet newName = prompt(`What is my name?`);\r\n\t\t\ti.name = world.creatures['I'].name = newName;\r\n\r\n\t\t\taction.talk(\r\n\t\t\t\ti.name,\r\n\t\t\t\t`It seems like my name is ${i.name}, and my world's name is... What was it?`\r\n\t\t\t);\r\n\t\t\tnewName = prompt(`What is the name of the World?`);\r\n\t\t\tworld.name = newName;\r\n\r\n\t\t\taction.talk(\r\n\t\t\t\ti.name,\r\n\t\t\t\t`Yes, it looks like the world is called ${world.name}. I love it. I wonder what the name of the regions are.`\r\n\t\t\t);\r\n\t\t\taction.observe(world.regions);\r\n\t\t\taction.talk(\r\n\t\t\t\ti.name,\r\n\t\t\t\t`Interesting. it looks like the only region is currently ${\r\n\t\t\t\t\tgetItemById(2, world.regions).name\r\n\t\t\t\t}`\r\n\t\t\t);\r\n\t\t\taction.talk(\r\n\t\t\t\ti.name,\r\n\t\t\t\t`I wonder if I can travel to ${getItemById(2, world.regions).name}`\r\n\t\t\t);\r\n\t\t\t// console.log(JSON.stringify(world.creatures['I']));\r\n\t\t\tnew addAction(`travel`, () => {});\r\n\t\t\t// action.observe(world.actions);\r\n\t\t}\r\n\t},\r\n\tfalse\r\n);\r\n"],"names":["window","addEventListener","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","idNumber","world","name","regions","creatures","species","actions","checkWorld","needle","haystack","find","Species","constructor","speciesName","console","error","this","id","push","addAction","actionName","functionCallback","action","getItemById","event","data","log","lastHeard","creature","JSON","stringify","document","querySelector","message","gameMessage","creatureCreate","speciesToBecome","result","getItem","creatureName","listen","i","observe","talk","doof","newName","prompt"],"sourceRoot":""}